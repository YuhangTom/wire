[{"path":"https://yuhangtom.github.io/wire/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 wire authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://yuhangtom.github.io/wire/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yuhang Lin. Author, maintainer. Heike Hofmann. Author.","code":""},{"path":"https://yuhangtom.github.io/wire/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lin Y, Hofmann H (2023). wire: Package (One Line, Title Case). R package version 0.0.0.9000, https://yuhangtom.github.io/wire/.","code":"@Manual{,   title = {wire: What the Package Does (One Line, Title Case)},   author = {Yuhang Lin and Heike Hofmann},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://yuhangtom.github.io/wire/}, }"},{"path":"https://yuhangtom.github.io/wire/index.html","id":"wire","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal wire …","code":""},{"path":"https://yuhangtom.github.io/wire/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version wire GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"YuhangTom/wire\")"},{"path":"https://yuhangtom.github.io/wire/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"basic example shows solve common problem:","code":"# library(wire) ## basic example code"},{"path":"https://yuhangtom.github.io/wire/reference/df_rmtrend_x3p.html","id":null,"dir":"Reference","previous_headings":"","what":"Removing missing values and the quadratic trend from inner polygon — df_rmtrend_x3p","title":"Removing missing values and the quadratic trend from inner polygon — df_rmtrend_x3p","text":"Obtained x3p object removing missing values quadratic trend inner polygon.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/df_rmtrend_x3p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removing missing values and the quadratic trend from inner polygon — df_rmtrend_x3p","text":"","code":"df_rmtrend_x3p(x3p, mask_col = \"#FF0000\", concavity = 1.5)"},{"path":"https://yuhangtom.github.io/wire/reference/df_rmtrend_x3p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removing missing values and the quadratic trend from inner polygon — df_rmtrend_x3p","text":"x3p x3p object mask_col colour polygon concavity strictly positive value used concaveman::concaveman","code":""},{"path":"https://yuhangtom.github.io/wire/reference/inside_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the inside polygon of a set of points — inside_polygon","title":"Identify the inside polygon of a set of points — inside_polygon","text":"Uses concentric mirroring onto radius around center point, applies alpha hull shape, mirrors result back.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/inside_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the inside polygon of a set of points — inside_polygon","text":"","code":"inside_polygon(x, y, concavity, center = NULL)"},{"path":"https://yuhangtom.github.io/wire/reference/inside_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the inside polygon of a set of points — inside_polygon","text":"x numeric vector x positions y numeric vector y positions concavity strictly positive parameter. Smaller values approach inside boundary closely. Large values concentrate inner center area center numeric vector length 2, consisting (x,y) coordinate centering x y values. center NULL, half ranges x y used.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/inside_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify the inside polygon of a set of points — inside_polygon","text":"dataframe x y positions describing inside area described input x y, variable id describes order points","code":""},{"path":"https://yuhangtom.github.io/wire/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://yuhangtom.github.io/wire/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://yuhangtom.github.io/wire/reference/vec_align_sigs_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Align signals — vec_align_sigs_list","title":"Align signals — vec_align_sigs_list","text":"Align signals plot.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/vec_align_sigs_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align signals — vec_align_sigs_list","text":"","code":"vec_align_sigs_list(   sig1,   sig2,   min.overlap = round(0.75 * min(length(sig1), length(sig2))),   ifplot = FALSE,   name1 = \"Cut1\",   name2 = \"Cut2\",   legendname = \"Signal\",   titlename = NULL )"},{"path":"https://yuhangtom.github.io/wire/reference/vec_align_sigs_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align signals — vec_align_sigs_list","text":"sig1 first signal vector sig2 second signal vector min.overlap additional parameter passed bulletxtrctr::get_ccf ifplot whether graphs displayed name1 name first cut name2 name second cut legendname legend name titlename title name","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_MLE_angle_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the rotation angle using MLE — x3p_MLE_angle_vec","title":"Compute the rotation angle using MLE — x3p_MLE_angle_vec","text":"Compute rotation angle using MLE hough transformation.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_MLE_angle_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the rotation angle using MLE — x3p_MLE_angle_vec","text":"","code":"x3p_MLE_angle_vec(   x3p,   ntheta = 720,   min_score_cut = 2,   ifplot = FALSE,   loess_span = 0.2 )"},{"path":"https://yuhangtom.github.io/wire/reference/x3p_MLE_angle_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the rotation angle using MLE — x3p_MLE_angle_vec","text":"x3p x3p object ntheta number bins along theta used imager::hough_line min_score_cut tuning parameter minimum scores required hough transformation ifplot whether graphs displayed loess_span parameter controls degree smoothing","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_boundary_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify boundary of a 3d topographic scan in x3p format — x3p_boundary_points","title":"Identify boundary of a 3d topographic scan in x3p format — x3p_boundary_points","text":"Identify boundary 3d topographic scan x3p format","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_boundary_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify boundary of a 3d topographic scan in x3p format — x3p_boundary_points","text":"","code":"x3p_boundary_points(x3p, sample)"},{"path":"https://yuhangtom.github.io/wire/reference/x3p_boundary_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify boundary of a 3d topographic scan in x3p format — x3p_boundary_points","text":"x3p topographic scan x3p format sample positive integer value specifying sampling ratio: every sample value x y direction included. Higher values result faster results cruder assessments boundary.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_boundary_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify boundary of a 3d topographic scan in x3p format — x3p_boundary_points","text":"data frame boundary points, variables named x y","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_image_autosize.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot x3p object as an image with auto-adjusted size — x3p_image_autosize","title":"Plot x3p object as an image with auto-adjusted size — x3p_image_autosize","text":"Plot x3p object image auto-adjusted size based x3ptools::x3p_image.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_image_autosize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot x3p object as an image with auto-adjusted size — x3p_image_autosize","text":"","code":"x3p_image_autosize(x3p, ifhtml = FALSE, zoom = 0.6, ...)"},{"path":"https://yuhangtom.github.io/wire/reference/x3p_image_autosize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot x3p object as an image with auto-adjusted size — x3p_image_autosize","text":"x3p x3p object ifhtml logical, whether image put html zoom numeric value indicating amount zoom ... parameter values except size zoom used x3ptools::x3p_image","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute the inner polygon — x3p_impute","title":"Impute the inner polygon — x3p_impute","text":"Obtained x3p object imputing inner polygon.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute the inner polygon — x3p_impute","text":"","code":"x3p_impute(   x3p,   mask_col = \"#FF0000\",   concavity = 1.5,   ifsave = FALSE,   dir_name = NULL,   ifplot = FALSE )"},{"path":"https://yuhangtom.github.io/wire/reference/x3p_impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute the inner polygon — x3p_impute","text":"x3p x3p object mask_col colour polygon concavity strictly positive value used concaveman::concaveman ifsave whether imputation procedure gif going saved dir_name required ifsave TRUE ifplot whether graphs displayed","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_insidepoly_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary data frame for the inner polygon — x3p_insidepoly_df","title":"Summary data frame for the inner polygon — x3p_insidepoly_df","text":"Create summary data frame inner polygon x3p object.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_insidepoly_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary data frame for the inner polygon — x3p_insidepoly_df","text":"","code":"x3p_insidepoly_df(x3p, mask_col = \"#FF0000\", concavity = 1.5)"},{"path":"https://yuhangtom.github.io/wire/reference/x3p_insidepoly_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary data frame for the inner polygon — x3p_insidepoly_df","text":"x3p x3p object mask_col colour polygon concavity strictly positive value used concaveman::concaveman","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_quantile_angle_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the rotation angle using quantile — x3p_quantile_angle_vec","title":"Compute the rotation angle using quantile — x3p_quantile_angle_vec","text":"Compute rotation angle using quantile hough transformation.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_quantile_angle_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the rotation angle using quantile — x3p_quantile_angle_vec","text":"","code":"x3p_quantile_angle_vec(x3p, ntheta = 720, min_score_cut = 2, ifplot = FALSE)"},{"path":"https://yuhangtom.github.io/wire/reference/x3p_quantile_angle_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the rotation angle using quantile — x3p_quantile_angle_vec","text":"x3p x3p object ntheta number bins along theta used imager::hough_line min_score_cut tuning parameter minimum scores required hough transformation ifplot whether graphs displayed","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_raw_sig_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract signal with raw x3p object — x3p_raw_sig_vec","title":"Extract signal with raw x3p object — x3p_raw_sig_vec","text":"Extract signal computing summary statistics values along y x raw x3p object.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_raw_sig_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract signal with raw x3p object — x3p_raw_sig_vec","text":"","code":"x3p_raw_sig_vec(x3p, method = \"median\", ifplot = FALSE)"},{"path":"https://yuhangtom.github.io/wire/reference/x3p_raw_sig_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract signal with raw x3p object — x3p_raw_sig_vec","text":"x3p x3p object method choice median mean computing summary statistics ifplot whether graphs displayed","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_shift_sig_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract signal with transformed x3p object by minimizing MSE — x3p_shift_sig_vec","title":"Extract signal with transformed x3p object by minimizing MSE — x3p_shift_sig_vec","text":"Extract signal computing summary statistics values along y x transformed x3p object minimizing MSE.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_shift_sig_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract signal with transformed x3p object by minimizing MSE — x3p_shift_sig_vec","text":"","code":"x3p_shift_sig_vec(x3p, method = \"median\", ifplot = FALSE, delta = -5:5)"},{"path":"https://yuhangtom.github.io/wire/reference/x3p_shift_sig_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract signal with transformed x3p object by minimizing MSE — x3p_shift_sig_vec","text":"x3p x3p object method choice median mean computing summary statistics ifplot whether graphs displayed delta shifting range minimizing MSE","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_subsamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsampled wire cuts data — x3p_subsamples","title":"Subsampled wire cuts data — x3p_subsamples","text":"list wire cuts data set subsampling factor 10 original wire cuts x3p.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_subsamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsampled wire cuts data — x3p_subsamples","text":"","code":"x3p_subsamples"},{"path":"https://yuhangtom.github.io/wire/reference/x3p_subsamples.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Subsampled wire cuts data — x3p_subsamples","text":"list list x3p objects","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_surface_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a polygon of the scan shape as mask — x3p_surface_polygon","title":"Add a polygon of the scan shape as mask — x3p_surface_polygon","text":"Add polygon scan shape mask","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_surface_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a polygon of the scan shape as mask — x3p_surface_polygon","text":"","code":"x3p_surface_polygon(   x3p,   colour = \"red\",   sample = 10,   center = NULL,   concavity = 1.5 )"},{"path":"https://yuhangtom.github.io/wire/reference/x3p_surface_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a polygon of the scan shape as mask — x3p_surface_polygon","text":"x3p x3p file colour colour polygon sample strictly positive integer value specifying amount downsampling used (see x3p_sample) calculate boundary points polygon. Larger values sample result faster response times results less accurate polygons. center point center scan. NULL, center derived boundary points concavity strictly positive value used concaveman::concaveman","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_surface_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a polygon of the scan shape as mask — x3p_surface_polygon","text":"x3p object mask","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_vertical.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate imputed x3p object to vertical direction — x3p_vertical","title":"Rotate imputed x3p object to vertical direction — x3p_vertical","text":"Rotate imputed x3p object striations vertical direction.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_vertical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate imputed x3p object to vertical direction — x3p_vertical","text":"","code":"x3p_vertical(   x3p_inner_impute,   freqs = c(0, 0.3, 0.7, 1),   method = \"MLE\",   ntheta = 720,   min_score_cut = 2,   ifplot = FALSE,   loess_span = 0.2 )"},{"path":"https://yuhangtom.github.io/wire/reference/x3p_vertical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate imputed x3p object to vertical direction — x3p_vertical","text":"x3p_inner_impute imputed x3p object freqs length 4 vector values corresponding color frequency (turned quantiles differenced values) used x3ptools::x3p_bin_stripes method choice MLE quantile computing rotation angle ntheta number bins along theta used imager::hough_line min_score_cut tuning parameter minimum scores required hough transformation ifplot whether graphs displayed loess_span parameter controls degree smoothing, available method = MLE","code":""}]
