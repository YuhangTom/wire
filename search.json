[{"path":"https://yuhangtom.github.io/wire/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 wire authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://yuhangtom.github.io/wire/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yuhang Lin. Author, maintainer. Heike Hofmann. Author.","code":""},{"path":"https://yuhangtom.github.io/wire/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lin Y, Hofmann H (2023). wire: Package (One Line, Title Case). R package version 0.0.0.9000, https://yuhangtom.github.io/wire/.","code":"@Manual{,   title = {wire: What the Package Does (One Line, Title Case)},   author = {Yuhang Lin and Heike Hofmann},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://yuhangtom.github.io/wire/}, }"},{"path":"https://yuhangtom.github.io/wire/index.html","id":"wire","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal wire …","code":""},{"path":"https://yuhangtom.github.io/wire/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version wire GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"YuhangTom/wire\")"},{"path":"https://yuhangtom.github.io/wire/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"basic example shows solve common problem:","code":"# library(wire) ## basic example code"},{"path":"https://yuhangtom.github.io/wire/reference/get_sig_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract signal with raw x3p object — get_sig_raw","title":"Extract signal with raw x3p object — get_sig_raw","text":"Extract signal computing summary statistics values along y x raw x3p object.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/get_sig_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract signal with raw x3p object — get_sig_raw","text":"","code":"get_sig_raw(x3p, method = \"median\", ifplot = FALSE)"},{"path":"https://yuhangtom.github.io/wire/reference/get_sig_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract signal with raw x3p object — get_sig_raw","text":"x3p x3p object method choice median mean computing summary statistics ifplot whether graphs displayed","code":""},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_bin_rotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate imputed x3p object to vertical direction — get_x3p_bin_rotate","title":"Rotate imputed x3p object to vertical direction — get_x3p_bin_rotate","text":"Rotate imputed x3p object striations vertical direction.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_bin_rotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate imputed x3p object to vertical direction — get_x3p_bin_rotate","text":"","code":"get_x3p_bin_rotate(   x3p_inner_impute,   freqs = c(0, 0.3, 0.7, 1),   method = \"MLE\",   ntheta = 720,   min_score_cut = 2,   ifplot = FALSE,   loess_span = 0.2 )"},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_bin_rotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate imputed x3p object to vertical direction — get_x3p_bin_rotate","text":"x3p_inner_impute imputed x3p object freqs length 4 vector values corresponding color frequency (turned quantiles differenced values) used x3ptools::x3p_bin_stripes method choice MLE quantile computing rotation angle ntheta number bins along theta used imager::hough_line min_score_cut tuning parameter minimum scores required hough transformation ifplot whether graphs displayed loess_span parameter controls degree smoothing, available method = MLE","code":""},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_inner_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary data frame for the inner polygon — get_x3p_inner_df","title":"Summary data frame for the inner polygon — get_x3p_inner_df","text":"Create summary data frame inner polygon x3p object.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_inner_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary data frame for the inner polygon — get_x3p_inner_df","text":"","code":"get_x3p_inner_df(x3p, mask_col = \"#FF0000\", concavity = 1.5)"},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_inner_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary data frame for the inner polygon — get_x3p_inner_df","text":"x3p x3p object mask_col colour polygon concavity strictly positive value used concaveman::concaveman","code":""},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_inner_impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute the inner polygon — get_x3p_inner_impute","title":"Impute the inner polygon — get_x3p_inner_impute","text":"Obtained x3p object imputing inner polygon.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_inner_impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute the inner polygon — get_x3p_inner_impute","text":"","code":"get_x3p_inner_impute(   x3p,   mask_col = \"#FF0000\",   concavity = 1.5,   ifsave = FALSE,   dir_name = NULL,   ifplot = FALSE )"},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_inner_impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute the inner polygon — get_x3p_inner_impute","text":"x3p x3p object mask_col colour polygon concavity strictly positive value used concaveman::concaveman ifsave whether imputation procedure gif going saved dir_name required ifsave TRUE ifplot whether graphs displayed","code":""},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_inner_nomiss_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Removing missing values and the quadratic trend from inner polygon — get_x3p_inner_nomiss_res","title":"Removing missing values and the quadratic trend from inner polygon — get_x3p_inner_nomiss_res","text":"Obtained x3p object removing missing values quadratic trend inner polygon.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_inner_nomiss_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removing missing values and the quadratic trend from inner polygon — get_x3p_inner_nomiss_res","text":"","code":"get_x3p_inner_nomiss_res(x3p, mask_col = \"#FF0000\", concavity = 1.5)"},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_inner_nomiss_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removing missing values and the quadratic trend from inner polygon — get_x3p_inner_nomiss_res","text":"x3p x3p object mask_col colour polygon concavity strictly positive value used concaveman::concaveman","code":""},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_rotate_angle_MLE.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the rotation angle using MLE — get_x3p_rotate_angle_MLE","title":"Compute the rotation angle using MLE — get_x3p_rotate_angle_MLE","text":"Compute rotation angle using MLE hough transformation.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_rotate_angle_MLE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the rotation angle using MLE — get_x3p_rotate_angle_MLE","text":"","code":"get_x3p_rotate_angle_MLE(   x3p,   ntheta = 720,   min_score_cut = 2,   ifplot = FALSE,   loess_span = 0.2 )"},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_rotate_angle_MLE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the rotation angle using MLE — get_x3p_rotate_angle_MLE","text":"x3p x3p object ntheta number bins along theta used imager::hough_line min_score_cut tuning parameter minimum scores required hough transformation ifplot whether graphs displayed loess_span parameter controls degree smoothing","code":""},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_rotate_angle_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the rotation angle using quantile — get_x3p_rotate_angle_quantile","title":"Compute the rotation angle using quantile — get_x3p_rotate_angle_quantile","text":"Compute rotation angle using quantile hough transformation.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_rotate_angle_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the rotation angle using quantile — get_x3p_rotate_angle_quantile","text":"","code":"get_x3p_rotate_angle_quantile(   x3p,   ntheta = 720,   min_score_cut = 2,   ifplot = FALSE )"},{"path":"https://yuhangtom.github.io/wire/reference/get_x3p_rotate_angle_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the rotation angle using quantile — get_x3p_rotate_angle_quantile","text":"x3p x3p object ntheta number bins along theta used imager::hough_line min_score_cut tuning parameter minimum scores required hough transformation ifplot whether graphs displayed","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_image_autosize.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot x3p object as an image with auto-adjusted size — x3p_image_autosize","title":"Plot x3p object as an image with auto-adjusted size — x3p_image_autosize","text":"Plot x3p object image auto-adjusted size based x3ptools::x3p_image.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_image_autosize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot x3p object as an image with auto-adjusted size — x3p_image_autosize","text":"","code":"x3p_image_autosize(x3p, ifhtml = FALSE, zoom = 0.6, ...)"},{"path":"https://yuhangtom.github.io/wire/reference/x3p_image_autosize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot x3p object as an image with auto-adjusted size — x3p_image_autosize","text":"x3p x3p object ifhtml logical, whether image put html zoom numeric value indicating amount zoom ... parameter values except size zoom used x3ptools::x3p_image","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_rotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate an x3p object — x3p_rotate","title":"Rotate an x3p object — x3p_rotate","text":"Rotate surface matrix mask x3p object. Also adjust meta information.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_rotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate an x3p object — x3p_rotate","text":"","code":"x3p_rotate(x3p, angle = 90)  rotate_x3p(x3p, angle = 90)"},{"path":"https://yuhangtom.github.io/wire/reference/x3p_rotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate an x3p object — x3p_rotate","text":"x3p x3p object angle rotate counter-clockwise angle degrees given 30, 60, 90 degree.","code":""},{"path":"https://yuhangtom.github.io/wire/reference/x3p_rotate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate an x3p object — x3p_rotate","text":"","code":"if (FALSE) { logo <- x3p_read(system.file(\"csafe-logo.x3p\", package = \"x3ptools\")) color_logo <- png::readPNG(system.file(\"csafe-color.png\", package=\"x3ptools\")) logoplus <- x3p_add_mask(logo, as.raster(color_logo)) dim(logoplus$surface.matrix) dim(logoplus$mask) x3p_image(logoplus, multiply=50, size = c(741, 419),zoom = 0.5)  logoplus60 <- x3p_rotate(x3p = logoplus, angle = 60) dim(logoplus60$surface.matrix) dim(logoplus60$mask) x3p_image(logoplus60, multiply=50, size = c(741, 419),zoom = 0.75) }"}]
